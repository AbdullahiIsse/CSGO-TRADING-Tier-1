@page "/dashboard"
@using SEPCSTier1.Models
@using SEPCSTier1.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SEP3_tier2.Models
@inject IItemData IitemData
@inject IOrderData orderData
@inject ISoldOfferData soldOfferData
@inject IOfferData OfferData

@inject IUserData userData

@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore


<!-- USER PROFILE PART (LEFT) -->
<div>
    <h1>Your profile</h1>
</div>

<div style="color:red">@errorMessage</div>

<div class="d-flex">
    <div class="col-5 my-6" style="margin: 20px 50px 0 50px">
        <div class="">
            <RadzenCard class="m-1">
                <h3 class="h5">Contact</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path="AK47.webp" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;"/>
                    <div>
                        <div>Shop username</div>
                        <b>@user.username</b>
                        <div class="mt-3">Shop id</div>
                        <b>@id</b>
                    </div>
                </div>
            </RadzenCard>
            <RadzenCard class="m-3">
                <h3 class="h5">Your shop information</h3>
                <div class="row">
                    <div class="col-md-4">
                        <div>Bought offers</div>
                        <b>@myBoughtProducts.Count</b>
                        <div class="mt-3">Money earned</div>
                        <b>@soldPrice</b>
                    </div>
                    <div class="col-md-8">
                        <div>Sold offers</div>
                        <b>@mySoldProducts.Count</b>
                        <div class="mt-3">Money spent</div>
                        <b>@boughtPrice</b>
                    </div>
                </div>
            </RadzenCard>
        </div>
    </div>

    <div>
        <div>
            <h1>My sold products</h1>
            <table class="table">
                <tbody>
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@mySoldProducts" TItem="SoldOfferBySeller">
                    <Template Context="items">
                        <RadzenCard Style="width:300px; margin-bottom: 20px; height:400px;">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between">
                                        <p>Skin Name</p>
                                        <p>Skin Price</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p>
                                            <b>@items.weaponname</b>
                                        </p>
                                        <p>
                                            <b>@items.sale_price</b>
                                        </p>
                                    </div>

                                    <img src="@items.weaponURL" width="300px"/>

                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
                </tbody>
            </table>
        </div>
        <div>
            <h1>My bought products</h1>
            <table class="table">
                <tbody>
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@myBoughtProducts" TItem="OrderByBuyer">
                    <Template Context="items">
                        <RadzenCard Style="width:300px; margin-bottom: 20px; height:400px;">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between">
                                        <p>Skin Name</p>
                                        <p>Skin Price</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p>
                                            <b>@items.weaponname</b>
                                        </p>
                                        <p>
                                            <b>@items.sale_price</b>
                                        </p>
                                    </div>

                                    <img src="@items.weaponURL" width="300px"/>

                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
                </tbody>
            </table>
        </div>

        <div>
            <h1>My Posted products</h1>
            <table class="table">
                <tbody>
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@PostedProducts" TItem="SaleOfferWallet">
                    <Template Context="items">
                        <RadzenCard Style="width:300px; margin-bottom: 20px; height:400px;">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between">
                                        <p>Skin Name</p>
                                        <p>Skin Price</p>
                                        <p>Delete</p>
                                        <p>update</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <p>
                                            <b>@items.weaponname</b>
                                        </p>
                                        <p>
                                            <b>@items.sale_price</b>
                                        </p>

                                        <p>
                                            <b>
                                                <button @onclick="@(() => RemoveSaleOffer(items.sale_offer_id))">
                                                    <i class="oi oi-trash" style="color:red"/>
                                                </button>
                                            </b>
                                        </p>


                                        <p>
                                            <b>
                                                <button @onclick="@(() => EditSaleOffer(items.sale_offer_id))">
                                                    <i class="oi oi-pencil" style="color:red"/>
                                                </button>
                                            </b>
                                        </p>


                                    </div>

                                    <img src="@items.weaponURL" width="300px"/>


                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
                </tbody>
            </table>
        </div>


    </div>
</div>

<!-- ORDERS & SALES PART RIGHT -->

@code {


    private IList<SoldOfferBySeller> mySoldProducts; //FINAL - ^SAMLET

    private IList<OrderByBuyer> myBoughtProducts; //FINAL

    private IList<SaleOfferWallet> PostedProducts; //FINAL

    private long id;
    private User user;
    private int boughtPrice;
    private int soldPrice;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        mySoldProducts = new List<SoldOfferBySeller>();
        myBoughtProducts = new List<OrderByBuyer>();
        PostedProducts = new List<SaleOfferWallet>();
        boughtPrice = 0;
        soldPrice = 0;
        user = new User();
        errorMessage = "";

        var protectedBrowserStorageResultId = await ProtectedSessionStore.GetAsync<long>("id");
        id = protectedBrowserStorageResultId.Value;


        if (id != 0)
        {
            user = await userData.GetUserByID(id);
    //Bought

            myBoughtProducts = await orderData.GetBoughtItems(id);

    //Sold
            mySoldProducts = await soldOfferData.GetSoldOfferBySeller(id);


    // posted items

            PostedProducts = await OfferData.GetItemsById(id);

            foreach (var VARIABLE in myBoughtProducts)
            {
                boughtPrice += VARIABLE.sale_price;
            }

            foreach (var VARIABLE in mySoldProducts)
            {
                soldPrice += VARIABLE.sale_price;
            }
        }
        else
        {
            errorMessage = "no item was found";
        }
    }

    private async void RemoveSaleOffer(long id)
    {
        await OfferData.DeleteSaleOffer(id);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

    private void EditSaleOffer(long id)
    {
        
        NavigationManager.NavigateTo($"EditSale/{id}");
    }

}