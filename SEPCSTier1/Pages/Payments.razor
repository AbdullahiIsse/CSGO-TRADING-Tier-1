@page "/Payment"
@using SEPCSTier1.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Components
@using SEPCSTier1.Models
@inject IPaymentData PaymentData
@inject IWalletData WalletData
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore
<h3>Payment</h3>

<div class="container-md">
    <div class="row">

        <EditForm Model="@newPaymentAccount" OnValidSubmit="@AddnewPaymentAccount">
            <DataAnnotationsValidator/> <ValidationSummary/>
            <div class="col">

                <h1> Payment Information</h1>
                <div class="form-group">
                    <label for="inputAddress">Name</label>
                    <InputTextArea class="form-control" id="Name" placeholder="Name" @bind-Value="newPaymentAccount.name"/>
                </div>

                <div class="form-group">
                    <label for="inputAddress">CardNumber</label>
                    <InputTextArea class="form-control" id="CardNumber" placeholder="**** **** **** ****" @bind-Value="newPaymentAccount.cardnumber"/>
                </div>

                <form>
                    <div class="row">
                        <div class="col">
                            <label for="inputAddress">Expiration Date</label>
                            <InputTextArea class="form-control" placeholder="**/**" @bind-Value="newPaymentAccount.expirationdate"/>
                        </div>
                        <div class="col">
                            <label for="inputAddress">Security Code</label>
                            <InputTextArea class="form-control" placeholder="***" @bind-Value="newPaymentAccount.securitycode"/>
                        </div>

                    </div>
                    <button type="submit" @onclick="AddnewPaymentAccount" class="btn btn-primary">Create & Pay</button>
                </form>
            </div>
        </EditForm>

       


    </div>

</div>


@layout EmptyLayout

@code {

    public long id { get; set; }
    private Payment newPaymentAccount = new Payment();
    

    protected async override Task OnInitializedAsync()
    {
        var protectedBrowserStorageResultId = await ProtectedSessionStore.GetAsync<long>("SID");
        id = protectedBrowserStorageResultId.Value;
        
    }


    private async void AddnewPaymentAccount()
    {
     //   Payment payment = await PaymentData.AddPayment(new Payment(newPaymentAccount.name, newPaymentAccount.cardnumber, newPaymentAccount.expirationdate, newPaymentAccount.securitycode, id));

        var paymentId = await PaymentData.GetPaymentId( null);
        await ProtectedSessionStore.SetAsync("p", paymentId);
        
        NavigationManager.NavigateTo("/AddWallet",true);
        
    }

    




}